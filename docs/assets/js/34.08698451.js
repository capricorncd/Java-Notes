(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{313:function(t,a,e){"use strict";e.r(a);var s=e(14),v=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("算术运算符")])]),t._v(" "),a("li",[a("p",[t._v("赋值运算符")])]),t._v(" "),a("li",[a("p",[t._v("比较运算符")])]),t._v(" "),a("li",[a("p",[t._v("逻辑运算符")])]),t._v(" "),a("li",[a("p",[t._v("条件运算符")])])]),t._v(" "),a("h3",{attrs:{id:"算术运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#算术运算符"}},[t._v("#")]),t._v(" 算术运算符")]),t._v(" "),a("p",[t._v("算术运算符主要用于进行基本的算术运算，如加法、减法、乘法、除法等。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/arithmetic-operator.jpg",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"赋值运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值运算符"}},[t._v("#")]),t._v(" 赋值运算符")]),t._v(" "),a("p",[t._v("赋值运算符是指为变量或常量指定数值的符号。如可以使用 “=” 将右边的表达式结果赋给左边的操作数。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/assignment-operators.jpg",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"比较运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#比较运算符"}},[t._v("#")]),t._v(" 比较运算符")]),t._v(" "),a("p",[t._v("比较运算符用于判断两个数据的大小，例如：大于、等于、不等于。比较的结果是一个布尔值（ true 或 false ）。")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/comparison-operator.jpg",alt:""}})]),t._v(" "),a("p",[t._v("1、"),a("code",[t._v(">")]),t._v("、"),a("code",[t._v("<")]),t._v("、"),a("code",[t._v(">=")]),t._v("、"),a("code",[t._v("<=")]),t._v(" 只支持左右两边操作数是"),a("code",[t._v("数值")]),t._v("类型")]),t._v(" "),a("p",[t._v("2、"),a("code",[t._v("==")]),t._v("、"),a("code",[t._v("!=")]),t._v(" 两边的操作数既可以是"),a("code",[t._v("数值")]),t._v("类型，也可以是"),a("code",[t._v("引用")]),t._v("类型")]),t._v(" "),a("h3",{attrs:{id:"逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),a("p",[t._v("逻辑运算符主要用于进行逻辑运算。Java 中常用的逻辑运算符如下表所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/logical-operator.jpg",alt:""}})]),t._v(" "),a("h5",{attrs:{id:"我们可以从-投票选举-的角度理解逻辑运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我们可以从-投票选举-的角度理解逻辑运算符"}},[t._v("#")]),t._v(" 我们可以从“投票选举”的角度理解逻辑运算符：")]),t._v(" "),a("p",[t._v("1、与：要求所有人都投票同意，才能通过某议题")]),t._v(" "),a("p",[t._v("2、或：只要求一个人投票同意就可以通过某议题")]),t._v(" "),a("p",[t._v("3、非：某人原本投票同意，通过非运算符，可以使其投票无效")]),t._v(" "),a("p",[t._v("4、异或：有且只能有一个人投票同意，才可以通过某议题")]),t._v(" "),a("h5",{attrs:{id:"当使用逻辑运算符时-我们会遇到一种很有趣的-短路-现象。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#当使用逻辑运算符时-我们会遇到一种很有趣的-短路-现象。"}},[t._v("#")]),t._v(" 当使用逻辑运算符时，我们会遇到一种很有趣的“短路”现象。")]),t._v(" "),a("p",[t._v("譬如：( one > two ) && ( one < three ) 中，如果能确定左边 one > two 运行结果为 false , 则系统就认为已经没有必要执行右侧的 one < three 啦。")]),t._v(" "),a("p",[t._v("同理，在( one > two ) || ( one < three ) 中，如果能确定左边表达式的运行结果为 true , 则系统也同样会认为已经没有必要再进行右侧的 one < three 的执行啦！")]),t._v(" "),a("h3",{attrs:{id:"条件运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件运算符"}},[t._v("#")]),t._v(" 条件运算符")]),t._v(" "),a("p",[t._v("条件运算符（ ? : ）也称为 “三元运算符”。")]),t._v(" "),a("h4",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("布尔表达式 ？表达式1 ：表达式2\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"运算符的优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符的优先级"}},[t._v("#")]),t._v(" 运算符的优先级")]),t._v(" "),a("p",[t._v("所谓优先级，就是在表达式中的运算顺序。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("优先级")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("运算符")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("()")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("! +正 -负 ++ --")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("* / %")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("+加 -减")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("< <= > >=")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("6")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("== !=")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("7")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("^")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("8")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("&&")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("9")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("img",{attrs:{src:"/img/logical-or.gif",alt:""}})])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("10")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("? :")]),t._v("三元运算符")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("11")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("= += -= *= /= %=")])])])])]),t._v(" "),a("p",[t._v("级别为 "),a("code",[t._v("1")]),t._v(" 的优先级最高，级别 "),a("code",[t._v("11")]),t._v(" 的优先级最低。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])}),[],!1,null,null,null);a.default=v.exports}}]);